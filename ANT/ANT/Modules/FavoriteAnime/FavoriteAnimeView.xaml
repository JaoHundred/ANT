<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:ANT.Lang"
             xmlns:modules="clr-namespace:ANT.Modules"
             xmlns:model="clr-namespace:ANT.Model"
             xmlns:behavior="clr-namespace:ANT._Behaviors"
             xmlns:ffimg="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:converter="clr-namespace:ANT.Converter"
             xmlns:custom="clr-namespace:ANT.CustomControls"
             x:DataType="modules:FavoriteAnimeViewModel"
             mc:Ignorable="d"
             x:Class="ANT.Modules.FavoriteAnimeView"
             Appearing="ContentPage_Appearing"
             Disappearing="ContentPage_Disappearing"
             x:Name="_page">

    <ContentPage.Resources>
        <converter:EmptyTextToBoolConverter x:Key="EmptyTextToBoolConverter"/>
        <converter:TranslateEnumConverter x:Key="TranslateEnumConverter"/>
        <converter:NullableIntToMaximumConverter x:Key="NullableIntToMaximumConverter"/>
        <converter:CanShowSwitchOnFavoritedAnimeConverter x:Key="CanShowSwitchConverter"/>
        <converter:InversorConverter x:Key="InversorConverter"/>
        <converter:GenreEnumToSeparateWordConverter x:Key="GenreToStringConverter"/>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid ColumnSpacing="20">

            <Label Text="{res:Translate FavoriteAnimes}" Style="{StaticResource NavigationBarTitleLabelStyle}"
                   x:Name="LabelTitle" />

            <Grid  x:Name="SearchControl" IsVisible="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Entry Placeholder="{res:Translate Search}" Style="{StaticResource SearchEntryStyle}" 
                   Text="{Binding SearchQuery}" Unfocused="SearchFieldLostFocus" x:Name="EntrySearchField">
                    <Entry.Behaviors>
                        <behavior:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchCommand}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Grid.Column="1" Style="{StaticResource SearchCancelButtonStyle}"  
                   IsVisible="{Binding SearchQuery, Converter={StaticResource EmptyTextToBoolConverter}}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ClearTextCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
            </Grid>

            <Label  Style="{StaticResource UpdateLabelStyle}" x:Name="UpdateLabel"
                   VerticalOptions="Center" TextColor="{DynamicResource TextTitleColor}"
                    HorizontalOptions="End">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding UpdateFavoriteAnimesCommand}"/>
                </Label.GestureRecognizers>
            </Label>

        </Grid>
    </Shell.TitleView>

    <ContentPage.ToolbarItems>
        <ToolbarItem Order="Secondary" Text="{res:Translate ClearAll}"
                     Command="{Binding ClearAllCommand}"/>
    </ContentPage.ToolbarItems>

    <custom:FilterSlideMenu x:Name="FilterSlideControl">
        <custom:FilterSlideMenu.PageContent>
            <custom:BottomSlideMenu x:Name="bottomSlideMenu">
                <custom:BottomSlideMenu.ViewContent>
                    <Grid>
                        <CollectionView ItemsSource="{Binding GroupedFavoriteByWeekList}" IsGrouped="True"
                                        SelectionMode="{Binding SelectionMode}"
                                        SelectionChangedCommand="{Binding OpenAnimeCommand}"
                                        SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                        SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                                        Scrolled="CollectionView_Scrolled">
                            <CollectionView.GroupHeaderTemplate>
                                <DataTemplate x:DataType="model:GroupedFavoriteAnimeByWeekDay">
                                    <Frame Style="{StaticResource HeaderFrameStyle}">
                                        <Label Text="{Binding GroupName}" Style="{StaticResource HeaderFrameLabel}"/>
                                    </Frame>

                                </DataTemplate>
                            </CollectionView.GroupHeaderTemplate>

                            <CollectionView.Footer>
                                <Label IsVisible="False"/>
                            </CollectionView.Footer>

                            <CollectionView.ItemsLayout>
                                <GridItemsLayout Span="2" Orientation="Vertical" />
                            </CollectionView.ItemsLayout>

                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="model:FavoritedAnime">
                                    <Frame Scale="0.95" HeightRequest="380" Padding="5">
                                        <Grid x:Name="favoritedAnimeGrid">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <ffimg:CachedImage x:Name="img" Source="{Binding Anime.ImageURL}"/>
                                            <ActivityIndicator IsRunning="{Binding IsLoading, Source={x:Reference img}}" 
                                               IsVisible="{Binding IsLoading, Source={x:Reference img}}"/>
                                            <Label Grid.Row="1" Text="{Binding Anime.Title}" Style="{StaticResource TitleLabelStyle}"/>
                                            <Grid Grid.Row="2" IsVisible="{Binding ., Converter={StaticResource CanShowSwitchConverter}}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Label Text="{res:Translate Notifications}"/>
                                                <Grid Grid.Row="1" Margin="10,0,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Label Text="{Binding NotificationStatus}" />
                                                    <Switch  Grid.Column="1" VerticalOptions="Start" HorizontalOptions="End"
                                             IsToggled="{Binding CanGenerateNotifications, Mode=TwoWay}" >
                                                        <Switch.Behaviors>
                                                            <behavior:EventToCommandBehavior EventName="Toggled"
                                                                                 Command="{Binding BindingContext.SwitchCommand, Source={x:Reference _page}}"
                                                                                 CommandParameter="{Binding .}"/>
                                                        </Switch.Behaviors>
                                                    </Switch>
                                                </Grid>
                                            </Grid>
                                            <Grid Grid.Row="3" VerticalOptions="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition Height="auto"/>
                                                </Grid.RowDefinitions>
                                                <Label Text="{res:Translate LastEpisode}"/>
                                                <Label Grid.Row="1" FontSize="Large" HorizontalTextAlignment="Center"
                                       TextColor="{DynamicResource TextColor}"
                                       Text="{Binding Value, Source={x:Reference lastEpisodeStepper}}"/>
                                                <Stepper Grid.Row="2"  x:Name="lastEpisodeStepper" HorizontalOptions="CenterAndExpand"
                                         Increment="1" Minimum="0" Maximum="{Binding Anime.Episodes, Converter={StaticResource NullableIntToMaximumConverter}}" 
                                         Value="{Binding LastEpisodeSeen, Mode=TwoWay}" >
                                                    <Stepper.Behaviors>
                                                        <behavior:EventToCommandBehavior EventName="ValueChanged"
                                                                             Command="{Binding BindingContext.StepperCommand, Source={x:Reference _page}}"
                                                                             CommandParameter="{Binding .}"/>
                                                    </Stepper.Behaviors>
                                                </Stepper>
                                            </Grid>
                                        </Grid>
                                    </Frame>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>

                        </CollectionView>

                        <Button x:Name="DeleteButton" Command="{Binding DeleteFavoriteCommand}" IsVisible="{Binding IsMultiSelect}" 
                Style="{StaticResource RoundedButtonOverlayStyle}" PropertyChanged="DeleteButton_AnimationOnIsVisible">
                            <Button.ImageSource>
                                <FontImageSource FontFamily="{StaticResource FontIcon}"
                                 Glyph="{StaticResource Delete}"
                                 Size="22" />
                            </Button.ImageSource>
                        </Button>
                    </Grid>
                </custom:BottomSlideMenu.ViewContent>

                <custom:BottomSlideMenu.MenuContent>
                    <Grid Margin="30,10,30,0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <custom:MenuImageButton Command="{Binding SelectionModeCommand}"
                                            ImageStyle="{StaticResource SelectLabelStyle}"
                                            ImageText="{res:Translate MultiSelect}"/>

                        <custom:MenuImageButton Grid.Column="1" ImageStyle="{StaticResource SearchLabelStyle}"
                                            ImageText="{res:Translate Search}"
                                            Tapped="SearchLabelTapped"/>

                        <custom:MenuImageButton Grid.Column="2" ImageStyle="{StaticResource FilterLabelStyle}"
                                            ImageText="{res:Translate Filter}"
                                            Tapped="FilterTapped"/>
                    </Grid>
                </custom:BottomSlideMenu.MenuContent>

            </custom:BottomSlideMenu>
        </custom:FilterSlideMenu.PageContent>

        <custom:FilterSlideMenu.Filters>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="5,5,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackLayout Orientation="Vertical" Grid.ColumnSpan="2" >
                    <Label Text="{res:Translate DayOfWeek}" FontSize="Subtitle"/>
                    <CollectionView ItemsSource="{Binding FilterData.DayOfWeekOrder}">
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout Orientation="Vertical" Span="2"/>
                        </CollectionView.ItemsLayout>
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="model:DayOfWeekFilterDate">
                                <StackLayout Orientation="Horizontal">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.DayOfWeekCheckedCommand, Source={x:Reference _page}}"
                                                              CommandParameter="{Binding .}"/>
                                    </StackLayout.GestureRecognizers>
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                    <Label Text="{Binding TodayDayOfWeek, Converter={StaticResource TranslateEnumConverter}}" 
                                           VerticalTextAlignment="Center"/>
                                </StackLayout>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </StackLayout>

                <StackLayout Orientation="Vertical" Grid.Row="1" Grid.ColumnSpan="2">
                    <Label Text="{res:Translate Genres}" FontSize="Subtitle"/>
                    <CollectionView ItemsSource="{Binding FilterData.Genres}">
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout Orientation="Vertical" Span="2"/>
                        </CollectionView.ItemsLayout>

                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="model:GenreData">
                                <StackLayout Orientation="Horizontal">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.GenreCheckedCommand, Source={x:Reference _page}}"
                                                      CommandParameter="{Binding .}"/>
                                    </StackLayout.GestureRecognizers>
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                    <Label Text="{Binding Genre, Converter={StaticResource GenreToStringConverter}}" VerticalTextAlignment="Center"/>
                                </StackLayout>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </StackLayout>
            </Grid>
        </custom:FilterSlideMenu.Filters>

        <custom:FilterSlideMenu.FilterMenu>
            <Grid>
                <Button Text="{res:Translate ApplyFilter}" Command="{Binding ApplyFilterCommand}"
                            Style="{StaticResource SpecsButtonStyle}" Margin="5"/>
                <Button Grid.Column="1" Text="{res:Translate ResetFilter}"
                            Command="{Binding ResetFilterCommand}" Style="{StaticResource SpecsButtonStyle}" Margin="5"/>
            </Grid>
        </custom:FilterSlideMenu.FilterMenu>

    </custom:FilterSlideMenu>

</ContentPage>