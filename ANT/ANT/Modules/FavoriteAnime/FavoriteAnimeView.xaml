<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:ANT.Lang"
             xmlns:comm="clr-namespace:ANT._Behaviors"
             xmlns:modules="clr-namespace:ANT.Modules"
             xmlns:model="clr-namespace:ANT.Model"
             xmlns:behavior="clr-namespace:ANT._Behaviors"
             xmlns:ffimg="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:converter="clr-namespace:ANT.Converter"
             xmlns:effect="clr-namespace:ANT.Effects"
             x:DataType="modules:FavoriteAnimeViewModel"
             mc:Ignorable="d"
             x:Class="ANT.Modules.FavoriteAnimeView"
             Appearing="ContentPage_Appearing"
             Disappearing="ContentPage_Disappearing"
             x:Name="_page">

    <ContentPage.Resources>
        <converter:EmptyTextToBoolConverter x:Key="EmptyTextToBoolConverter"/>
        <converter:TranslateEnumConverter x:Key="TranslateEnumConverter"/>
        <converter:ValueIsNullToBoolConverter x:Key="NullToBoolConverter"/>
        <converter:StringToIntConverter x:Key="StringToIntConverter"/>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Label Text="{res:Translate FavoriteAnimes}" Style="{StaticResource NavigationBarTitleLabelStyle}"
                   x:Name="LabelTitle" />

            <Grid Grid.ColumnSpan="2" x:Name="SearchControl" IsVisible="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Entry Placeholder="{res:Translate Search}" Style="{StaticResource SearchEntryStyle}" 
                   Text="{Binding SearchQuery}" Unfocused="SearchFieldLostFocus" x:Name="EntrySearchField">
                    <Entry.Behaviors>
                        <comm:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchCommand}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Grid.Column="1" Style="{StaticResource SearchCancelButtonStyle}"  
                   IsVisible="{Binding SearchQuery, Converter={StaticResource EmptyTextToBoolConverter}}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ClearTextCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
            </Grid>
            <Label Grid.Column="1" Style="{StaticResource SearchLabelStyle}" x:Name="SearchIconLabel"
                   VerticalOptions="Center" Margin="0,0,2,0" TextColor="{DynamicResource TextTitleColor}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="SearchLabelTapped"/>
                </Label.GestureRecognizers>
            </Label>
        </Grid>
    </Shell.TitleView>

    <ContentPage.ToolbarItems>
        <ToolbarItem Order="Secondary" Text="{res:Translate ClearAll}"
                     Command="{Binding ClearAllCommand}"/>

        <ToolbarItem Order="Secondary" Text="{res:Translate MultiSelect}"
                     Command="{Binding SelectionModeCommand}"/>
    </ContentPage.ToolbarItems>


    <Grid>

        <CollectionView ItemsSource="{Binding GroupedFavoriteByWeekList}" IsGrouped="True"
                        SelectionMode="{Binding SelectionMode}"
                        SelectionChangedCommand="{Binding OpenAnimeCommand}"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                        SelectedItems="{Binding SelectedItems, Mode=TwoWay}">
            <CollectionView.GroupHeaderTemplate>
                <DataTemplate x:DataType="model:GroupedFavoriteAnimeByWeekDay">
                    <Frame Style="{StaticResource HeaderFrameStyle}">
                        <Label Text="{Binding GroupName}" Style="{StaticResource HeaderFrameLabel}"/>
                    </Frame>

                </DataTemplate>
            </CollectionView.GroupHeaderTemplate>

            <CollectionView.Footer>
                <Label IsVisible="False"/>
            </CollectionView.Footer>

            <CollectionView.ItemsLayout>
                <GridItemsLayout Span="2" Orientation="Vertical" />
            </CollectionView.ItemsLayout>

            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="model:FavoritedAnime">
                    <Frame Scale="0.95" HeightRequest="380" Padding="5">
                        <Grid x:Name="favoritedAnimeGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <ffimg:CachedImage x:Name="img" Source="{Binding Anime.ImageURL}"/>
                            <ActivityIndicator IsRunning="{Binding IsLoading, Source={x:Reference img}}" 
                                               IsVisible="{Binding IsLoading, Source={x:Reference img}}"/>
                            <Label Grid.Row="1" Text="{Binding Anime.Title}" Style="{StaticResource TitleLabelStyle}"/>
                            <Grid Grid.Row="2" IsVisible="{Binding NextStreamDate, Converter={StaticResource NullToBoolConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Text="{res:Translate Notifications}"/>
                                <Grid Grid.Row="1" Margin="10,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding NotificationStatus}" />
                                    <Switch  Grid.Column="1" VerticalOptions="Start" HorizontalOptions="End"
                                             IsToggled="{Binding CanGenerateNotifications, Mode=TwoWay}"/>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="3" VerticalOptions="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Label Text="{res:Translate LastEpisode}"/>
                                <Label Grid.Row="1" FontSize="Large" HorizontalTextAlignment="Center"
                                       TextColor="{DynamicResource TextColor}"
                                       Text="{Binding Value, Source={x:Reference lastEpisodeStepper}}"/>
                                <Stepper Grid.Row="2"  x:Name="lastEpisodeStepper" HorizontalOptions="CenterAndExpand"
                                         Increment="1" Minimum="0" Maximum="{Binding Anime.Episodes, Converter={StaticResource StringToIntConverter}}" 
                                         Value="{Binding LastEpisodeSeen, Mode=TwoWay}"/>
                            </Grid>
                        </Grid>
                    </Frame>
                </DataTemplate>
            </CollectionView.ItemTemplate>

        </CollectionView>

        <Button Text="gerador de notificação" Clicked="gerador_de_notificacao"
                x:Name="NotificationTester" IsVisible="False"/>

        <Button x:Name="DeleteButton" Command="{Binding DeleteFavoriteCommand}" IsVisible="{Binding IsMultiSelect}" 
                Style="{StaticResource RoundedButtonOverlayStyle}" PropertyChanged="DeleteButton_AnimationOnIsVisible">
            <Button.ImageSource>
                <FontImageSource FontFamily="{StaticResource FontIcon}"
                                 Glyph="{StaticResource Delete}"
                                 Size="22" />
            </Button.ImageSource>
        </Button>
    </Grid>

</ContentPage>