<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:ANT.Lang"
             xmlns:converter="clr-namespace:ANT.Converter"
             xmlns:animate="clr-namespace:Xamanimation;assembly=Xamanimation"
             xmlns:FFimage="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:comm="clr-namespace:ANT._Behaviors"
             xmlns:favo="clr-namespace:ANT.Model"
             xmlns:VM="clr-namespace:ANT.Modules"
             xmlns:Util="clr-namespace:ANT.UTIL"
             mc:Ignorable="d"
             x:Class="ANT.Modules.CatalogueView"
             BackgroundColor="{DynamicResource AppBackgroundColor}"
             x:DataType="VM:CatalogueViewModel"
             x:Name="_Page" >

    <ContentPage.Resources>
        <converter:InversorConverter x:Key="InversorConverter"/>
        <converter:EmptyTextToBoolConverter x:Key="EmptyTextToBoolConverter"/>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Label Text="{res:Translate Catalogue}" Style="{StaticResource NavigationBarTitleLabelStyle}"
                   x:Name="LabelTitle" />

            <Grid Grid.ColumnSpan="2" x:Name="SearchControl" IsVisible="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Entry Placeholder="{res:Translate Search}" Style="{StaticResource SearchEntryStyle}" 
                   Text="{Binding SearchQuery}" Unfocused="SearchFieldLostFocus" x:Name="EntrySearchField">
                    <Entry.Behaviors>
                        <comm:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchCommand}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Grid.Column="1" Style="{StaticResource SearchCancelButtonStyle}"  
                   IsVisible="{Binding SearchQuery, Converter={StaticResource EmptyTextToBoolConverter}}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ClearTextCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
            </Grid>
            <Label Grid.Column="1" Style="{StaticResource SearchLabelStyle}" x:Name="SearchIconLabel"
                   VerticalOptions="Center" Margin="0,0,2,0" TextColor="{DynamicResource TextTitleColor}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="SearchLabelTapped"/>
                </Label.GestureRecognizers>
            </Label>
        </Grid>


    </Shell.TitleView>

    <Shell.BackButtonBehavior>
        <BackButtonBehavior Command="{Binding BackButtonCommand}"
                            CommandParameter="{x:Static Util:BackButtonOriginEnum.NavigationBar}"/>
    </Shell.BackButtonBehavior>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{res:Translate MultiSelect}" Command="{Binding SelectionModeCommand}" Order="Secondary">
            <ToolbarItem.IconImageSource>
                <FontImageSource/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>


    <Grid Margin="0,3,0,3">
        <RefreshView Command="{Binding RefreshCommand}" 
                     IsRefreshing="{Binding IsRefreshing}" 
                     IsEnabled="{Binding IsLoading, Converter={StaticResource InversorConverter}}">

            <CollectionView ItemsSource="{Binding Animes}" x:Name="CatalogueCollection"
                            SelectionMode="{Binding SelectionMode}" SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                            SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                            SelectionChangedCommand="{Binding OpenAnimeCommand}"
                            RemainingItemsThreshold="{Binding RemainingAnimeCount}"
                            RemainingItemsThresholdReachedCommand="{Binding LoadMoreCommand}">
                <CollectionView.EmptyView>
                    <Grid>
                        <ActivityIndicator IsVisible="{Binding IsLoading}" IsRunning="{Binding IsLoading}"/>
                    </Grid>
                </CollectionView.EmptyView>

                <CollectionView.Footer>
                    <Label/> <!--necessário para evitar que o último item fique no tamanho errado-->
                </CollectionView.Footer>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" 
                                     Span="2" VerticalItemSpacing="10" HorizontalItemSpacing="10"/>
                </CollectionView.ItemsLayout>

                <CollectionView.ItemTemplate>

                    <DataTemplate x:DataType="favo:FavoritedAnime">
                        <Frame>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <FFimage:CachedImage x:Name="AnimeImage" Source="{Binding Anime.ImageURL}" 
                                                     DownsampleToViewSize="True"/>

                                <Grid IsVisible="{Binding IsLoading, Converter={StaticResource InversorConverter}, Source={x:Reference AnimeImage}}">
                                    <BoxView BackgroundColor="{StaticResource OpaqueBlackColor}"
                                             IsVisible="{Binding IsFavorited}"/>

                                    <Label Style="{StaticResource FavoritedAnimeStyle}" FontSize="50"
                                           IsVisible="{Binding IsFavorited}"
                                           HorizontalOptions="Center" VerticalOptions="Center"/>
                                </Grid>

                                <ActivityIndicator IsRunning="{Binding IsLoading, Source={x:Reference AnimeImage}}" 
                                                   IsVisible="{Binding IsLoading, Source={x:Reference AnimeImage}}"/>

                                <Label Grid.Row="1" Text="{Binding Anime.Title}" 
                                       LineBreakMode="TailTruncation" MaxLines="1"
                                       Style="{StaticResource AnimeFrameLabelStyle}" />
                            </Grid>
                        </Frame>
                    </DataTemplate>
                </CollectionView.ItemTemplate>

            </CollectionView>
        </RefreshView>
        <ActivityIndicator HorizontalOptions="Center"  VerticalOptions="End" Margin="3"
                           IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}"/>

        <Button x:Name="FavoriteButton" Command="{Binding AddToFavoriteCommand}" IsVisible="{Binding IsMultiSelect}" 
                Style="{StaticResource RoundedButtonOverlayStyle}" PropertyChanged="FavoriteButton_AnimationOnIsVisible">

            <Button.ImageSource>
                <FontImageSource FontFamily="{StaticResource FontIcon}"
                                 Glyph="{StaticResource StarFill}"
                                 Size="22" />
            </Button.ImageSource>
        </Button>
    </Grid>
</ContentPage>