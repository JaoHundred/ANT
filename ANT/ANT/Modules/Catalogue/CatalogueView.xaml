<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:ANT.Lang"
             xmlns:converter="clr-namespace:ANT.Converter"
             xmlns:animate="clr-namespace:Xamanimation;assembly=Xamanimation"
             xmlns:FFimage="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:comm="clr-namespace:ANT._Behaviors"
             xmlns:favo="clr-namespace:ANT.Model"
             xmlns:ji="clr-namespace:JikanDotNet;assembly=JikanDotNet"
             xmlns:VM="clr-namespace:ANT.Modules"
             xmlns:back="clr-namespace:ANT.UTIL"
             mc:Ignorable="d"
             x:Class="ANT.Modules.CatalogueView"
             BackgroundColor="{DynamicResource AppBackgroundColor}"
             x:DataType="VM:CatalogueViewModel"
             x:Name="_Page"  >

    <ContentPage.Resources>
        <converter:InversorConverter x:Key="InversorConverter"/>
        <converter:EmptyTextToBoolConverter x:Key="EmptyTextToBoolConverter"/>
        <converter:GenreEnumToSeparateWordConverter x:Key="GenreToStringConverter"/>
        <converter:TranslateEnumConverter x:Key="TranslateEnumConverter"/>
        <converter:ValueIsNullToBoolConverter x:Key="ValueIsNullToBoolConverter"/>
        <converter:BoolToGridLenghtConverter x:Key="BoolToGridLenghtConverter"/>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid ColumnSpacing="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Label Text="{res:Translate Catalogue}" Style="{StaticResource NavigationBarTitleLabelStyle}"
                   x:Name="LabelTitle" />

            <Grid Grid.ColumnSpan="3" x:Name="SearchControl" IsVisible="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Entry Placeholder="{res:Translate Search}" Style="{StaticResource SearchEntryStyle}" 
                   Text="{Binding SearchQuery}" Unfocused="SearchFieldLostFocus" x:Name="EntrySearchField">
                    <Entry.Behaviors>
                        <comm:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchCommand}"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Grid.Column="1" Style="{StaticResource SearchCancelButtonStyle}"  
                   IsVisible="{Binding SearchQuery, Converter={StaticResource EmptyTextToBoolConverter}}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ClearTextCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
            </Grid>
            <Label Grid.Column="1" Style="{StaticResource SearchLabelStyle}" x:Name="SearchIconLabel"
                   VerticalOptions="Center" TextColor="{DynamicResource TextTitleColor}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="SearchLabelTapped"/>
                </Label.GestureRecognizers>
            </Label>
            <Label Grid.Column="2" x:Name="FilterControl" Style="{StaticResource FilterLabelStyle}"
                   VerticalOptions="Center" TextColor="{DynamicResource TextTitleColor}"
                   IsVisible="{Binding Loading, Converter={StaticResource InversorConverter}}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="FilterTapped"/>
                </Label.GestureRecognizers>
            </Label>
        </Grid>


    </Shell.TitleView>

    <Shell.BackButtonBehavior>
        <BackButtonBehavior Command="{Binding BackButtonCommand}"
                            CommandParameter="{Binding ., Source={x:Reference _Page}}"/>
    </Shell.BackButtonBehavior>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{res:Translate MultiSelect}" Command="{Binding SelectionModeCommand}" Order="Secondary">
            <ToolbarItem.IconImageSource>
                <FontImageSource/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>


    <Grid RowSpacing="0">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding IsSeasonCatalogue, Converter={StaticResource BoolToGridLenghtConverter}, ConverterParameter=20}"/>
            <RowDefinition Height="90*"/>
        </Grid.RowDefinitions>
        <Frame VerticalOptions="Start" Padding="3" CornerRadius="0" Margin="3,3" 
               IsVisible="{Binding SeasonData, Converter={StaticResource ValueIsNullToBoolConverter}}">
            <Grid x:DataType="VM:CatalogueViewModel">
                <Picker Title="{res:Translate SelectYear}" HorizontalOptions="Center"
                        ItemsSource="{Binding SeasonData.Years}"
                        SelectedItem="{Binding SeasonData.SelectedYear, Mode=TwoWay}"/>

                <Picker Grid.Column="1" Title="{res:Translate SelectSeason}" HorizontalOptions="Center"
                        ItemsSource="{Binding SeasonData.Seasons}"
                        SelectedItem="{Binding SeasonData.SelectedSeason, Mode=TwoWay}"/>

                <Button Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource SpecsButtonStyle}"
                        Text="{res:Translate Confirm}" Command="{Binding ChangeSeasonCommand}"/>
            </Grid>
        </Frame>
        <Grid Grid.Row="1" >
            <CollectionView ItemsSource="{Binding Animes}" x:Name="CatalogueCollection" Margin="3,3,3,0"
                            SelectionMode="{Binding SelectionMode}" SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                            SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                            SelectionChangedCommand="{Binding OpenAnimeCommand}"
                            RemainingItemsThreshold="{Binding RemainingAnimeCount}"
                            RemainingItemsThresholdReachedCommand="{Binding LoadMoreCommand}">

                <CollectionView.EmptyView>
                    <BoxView/>
                </CollectionView.EmptyView>

                <CollectionView.Footer>
                    <!--a presença de um footer também mantém os itens da lista nos tamanhos corretos(o fim dela)-->
                    <Label HeightRequest="50"/>
                </CollectionView.Footer>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" 
                                     Span="2" VerticalItemSpacing="10" HorizontalItemSpacing="10"/>
                </CollectionView.ItemsLayout>

                <CollectionView.ItemTemplate>

                    <DataTemplate x:DataType="favo:FavoritedAnime">
                        <Frame>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <FFimage:CachedImage x:Name="AnimeImage" Source="{Binding Anime.ImageURL}"/>

                                <Grid IsVisible="{Binding IsLoading, Converter={StaticResource InversorConverter}, Source={x:Reference AnimeImage}}">
                                    <BoxView BackgroundColor="{StaticResource OpaqueBlackColor}"
                                             IsVisible="{Binding IsFavorited}"/>

                                    <Label Style="{StaticResource FavoritedAnimeStyle}" FontSize="50"
                                           IsVisible="{Binding IsFavorited}"
                                           HorizontalOptions="Center" VerticalOptions="Center"/>
                                </Grid>

                                <ActivityIndicator IsRunning="{Binding IsLoading, Source={x:Reference AnimeImage}}" 
                                                   IsVisible="{Binding IsLoading, Source={x:Reference AnimeImage}}"/>

                                <Label Grid.Row="1" Text="{Binding Anime.Title}" 
                                       LineBreakMode="TailTruncation" MaxLines="1"
                                       Style="{StaticResource AnimeFrameLabelStyle}" />
                            </Grid>
                        </Frame>
                    </DataTemplate>
                </CollectionView.ItemTemplate>

            </CollectionView>

            <ActivityIndicator HorizontalOptions="Center"  VerticalOptions="End" 
                           IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}"/>

            <Button x:Name="FavoriteButton" Command="{Binding AddToFavoriteCommand}" IsVisible="{Binding IsMultiSelect}" 
                Style="{StaticResource RoundedButtonOverlayStyle}" PropertyChanged="FavoriteButton_AnimationOnIsVisible"
                    d:IsVisible="false">

                <Button.ImageSource>
                    <FontImageSource FontFamily="{StaticResource FontIcon}"
                                 Glyph="{StaticResource StarFill}"
                                 Size="22" />
                </Button.ImageSource>
            </Button>

            <Grid Style="{StaticResource GridFullPageForActivityIndicatorStyle}"
                  IsVisible="{Binding Loading}">
                <ActivityIndicator IsVisible="{Binding Loading}" IsRunning="{Binding Loading}"/>
            </Grid>

        </Grid>
        <Grid Grid.RowSpan="2" x:Name="SlideMenu" BackgroundColor="{DynamicResource AppBackgroundColor}"
             TranslationY="{Binding Height, Source={x:Reference _Page}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition />
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>


            <BoxView Grid.ColumnSpan="2" BackgroundColor="{DynamicResource BoxViewFilterHeaderColor}"/>
            <Label Text="{res:Translate SearchFilters}" Grid.ColumnSpan="2" HorizontalOptions="Center" VerticalOptions="Center"
                   FontSize="Title"/>

            <Grid Grid.ColumnSpan="2" HorizontalOptions="End" VerticalOptions="Center"
                  Margin="0,0,0,10">
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Tapped="CloseSlideMenuTapped"/>
                </Grid.GestureRecognizers>

                <AbsoluteLayout>
                    <BoxView BackgroundColor="{DynamicResource BoxViewFilterCloseBoxButtonColor}" HeightRequest="5"/>
                    <BoxView BackgroundColor="{DynamicResource BoxViewFilterCloseBoxButtonColor}" CornerRadius="5"/>
                </AbsoluteLayout>

                <Label Text="X" FontSize="25" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
            </Grid>

            <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="5,5,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="100"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackLayout Orientation="Vertical" Grid.ColumnSpan="2" >
                    <Label Text="{res:Translate SortOrder}" FontSize="Subtitle"/>
                    <CollectionView ItemsSource="{Binding FilterData.SortDirections}"
                                HeightRequest="50">
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout Orientation="Vertical" Span="2"/>
                        </CollectionView.ItemsLayout>
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="favo:SortDirectionData">
                                <RadioButton Grid.Row="1" Text="{Binding SortDirection, Converter={StaticResource TranslateEnumConverter}}" 
                                         GroupName="SortDirection" IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                         Command="{Binding BindingContext.SelectSortDirectionCommand, Source={x:Reference _Page}}"
                                         CommandParameter="{Binding .}"/>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </StackLayout>

                <StackLayout Orientation="Vertical" Grid.Row="1" Grid.ColumnSpan="2">
                    <Label Text="{res:Translate TypeOfSort}" FontSize="Subtitle"/>
                    <CollectionView ItemsSource="{Binding FilterData.Orders}" >
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout Orientation="Vertical" Span="2"/>
                        </CollectionView.ItemsLayout>
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="favo:OrderData">
                                <RadioButton Text="{Binding OrderBy, Converter={StaticResource TranslateEnumConverter}}" GroupName="SearchSortable" 
                                         IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                         Command="{Binding BindingContext.SelectSortTypeCommand, Source={x:Reference _Page}}"
                                         CommandParameter="{Binding .}"/>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </StackLayout>

                <StackLayout Orientation="Vertical" Grid.Row="2" Grid.ColumnSpan="2">
                    <Label Text="{res:Translate Genres}" FontSize="Subtitle"/>
                    <CollectionView ItemsSource="{Binding FilterData.Genres}">
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout Orientation="Vertical" Span="2"/>
                        </CollectionView.ItemsLayout>

                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="favo:GenreData">
                                <StackLayout Orientation="Horizontal">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.GenreCheckedCommand, Source={x:Reference _Page}}"
                                                      CommandParameter="{Binding .}"/>
                                    </StackLayout.GestureRecognizers>
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                    <Label Text="{Binding Genre, Converter={StaticResource GenreToStringConverter}}" VerticalTextAlignment="Center"/>
                                </StackLayout>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </StackLayout>
            </Grid>

            <Button Grid.Row="2" Text="{res:Translate ApplyFilter}" Command="{Binding ApplyFilterCommand}"
                    Style="{StaticResource SpecsButtonStyle}" Margin="5"/>
            <Button Grid.Row="2" Grid.Column="1" Text="{res:Translate ResetFilter}"
                    Command="{Binding ResetFilterCommand}" Style="{StaticResource SpecsButtonStyle}" Margin="5"/>
        </Grid>
    </Grid>
</ContentPage>